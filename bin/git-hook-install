#!/usr/bin/env bash

ARGS=()
while [ -n "$1" ];
do
  case $1 in
    --force )
      force=true
      shift
      ;;
    --link )
      link=true
      shift
      ;;
    * )
      ARGS=("${ARGS[@]}" "$1")
      shift
      ;;
  esac
done

timing="${ARGS[0]}"
shift
hook="${ARGS[1]}"
shift
preset_hook_name="${ARGS[2]}"
shift

ALLOWED_TIMING=`cat <<TM
applypatch-msg
pre-applypatch
post-applypatch
pre-commit
prepare-commit-msg
commit-msg
post-commit
pre-rebase
post-checkout
post-merge
pre-receive
update
post-update
pre-auto-gc
post-rewrite
TM
`

echo "$ALLOWED_TIMING" | grep -sq "^$timing$"
if [ $? -eq 1 ]; then
  echo "\`$timing' is unknown timing" >&2
  exit 1
fi

template="$(dirname "$0")/../hook"

cwd="$(pwd)"

if [ -f "$hook" ]; then
  hook="$(cd $(dirname "$hook") && pwd)/$(basename $hook)"
fi

cd "./$(git rev-parse --show-cdup)"
cd "$(git rev-parse --git-dir)/hooks"

hookdiff="$(diff "$template" "$timing" 2>&1)"
mkdir -p "installed/$timing"
if [ -n "$hookdiff" ]; then
  if [ -x "$timing" ]; then
    mv "$timing" "installed/$timing/origin"
  fi
  ln -s "$template" "$timing"
  chmod +x "$timing"
fi

case "$hook" in
  http://* | https://* ) # via URL
    type="url"
    hook_name="$(basename "$hook")"
    url="$hook"
    ;;
  gist:* ) # via gist
    type="gist"
    gist=${hook:5}
    hook_name="gist-$gist"
    url="https://gist.github.com/raw/$gist"
    ;;
  * ) # other
    if [ -f "$hook" ]; then # via file
      type="file"
      hook_name="$(basename "$hook")"
    fi
    ;;
esac

if [ -n "$preset_hook_name" ]; then
  hook_name="$preset_hook_name"
fi

install_path="installed/$timing/$hook_name"

if [ -f "$install_path" ] && [ -z "$force" ]; then
  echo "\`$hook_name' is installed. force install with --force option" >&2
  exit 1
fi

case "$type" in
  url | gist )
    curl -L -o "$install_path" "$url"
    ;;
  file )
    if [[ -n "$link" ]]; then
      ln -s "$hook" "$install_path"
    else
      cp "$hook" "$install_path"
    fi
    ;;
esac

chmod +x "$install_path"

echo "\`$hook_name' installed"

cd "$cwd"
